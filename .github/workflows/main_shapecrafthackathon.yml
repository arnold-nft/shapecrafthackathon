name: Build and deploy Node.js app to Azure Web App - shapecrafthackathon-frontend

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify repo layout (debug)
        run: |
          pwd
          ls -la
          ls -la frontend || true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # Align with your Volta config; 22.x is fine for Next 15/React 19
          node-version: '22.x'

      # Optional, resilient npm cache (won't cause failures)
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci || npm install
          else
            npm install
          fi

      - name: Build Next.js app
        working-directory: ./frontend
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: npm run build

      - name: Prepare deployment package
        run: |
          rm -rf publish
          mkdir -p publish
          cp -r frontend/.next publish/.next
          cp -r frontend/public publish/public || mkdir -p publish/public
          cp frontend/package.json publish/
          # include lockfile so Azure can install deps
          [ -f frontend/package-lock.json ] && cp frontend/package-lock.json publish/ || true
          cp frontend/next.config.js publish/ || true
          cp frontend/tsconfig.json publish/ || true
          cp frontend/.env.production publish/.env.production || true

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./publish

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_0EF51C7C3D00438F81F9AC1F755B65B4 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CFA2902651D44426B999819E48EEBAFB }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_3F78303978244D6F88AB6E5CAB85ADB1 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'shapecrafthackathon'
          slot-name: 'Production'
          package: ./publish
